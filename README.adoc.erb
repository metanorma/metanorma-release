= Metanorma Release repository

WARNING: This repository is for INTERNAL USE ONLY.

== Metanorma gems

(in dependency order)

<% for name in %w[html2doc isodoc metanorma-standoc metanorma-iso metanorma-gb metanorma-iec metanorma-acme metanorma-csand metanorma-csd metanorma-ietf metanorma-itu metanorma-m3d metanorma-mpfd metanorma-nist metanorma-ogc metanorma-rsd metanorma-sample metanorma-unece metanorma-vsd metanorma metanorma-cli] %>
https://github.com/metanorma/<%=name%>[<%=name%>] image:https://img.shields.io/gem/v/<%=name%>.svg["Gem Version", link="https://rubygems.org/gems/<%=name%>"]::
image:https://github.com/metanorma/<%=name%>/workflows/macos/badge.svg["Build Status (macOS)", link="https://github.com/metanorma/<%=name%>/actions?workflow=macos"]
image:https://github.com/metanorma/<%=name%>/workflows/windows/badge.svg["Build Status (Windows)", link="https://github.com/metanorma/<%=name%>/actions?workflow=windows"]
image:https://github.com/metanorma/<%=name%>/workflows/ubuntu/badge.svg["Build Status (Ubuntu)", link="https://github.com/metanorma/<%=name%>/actions?workflow=ubuntu"]
image:https://codeclimate.com/github/metanorma/<%=name%>/badges/gpa.svg["Code Climate", link="https://codeclimate.com/github/metanorma/<%=name%>"]
image:https://img.shields.io/github/issues-pr-raw/metanorma/<%=name%>.svg["Pull Requests", link="https://github.com/metanorma/<%=name%>/pulls"]
image:https://img.shields.io/github/commits-since/metanorma/<%=name%>/latest.svg["Commits since latest",link="https://github.com/metanorma/<%=name%>/releases"]
<% end %>

https://github.com/metanorma/metanorma-docker[metanorma-docker]::
image:https://travis-ci.com/metanorma/metanorma-docker.svg?branch=master["Build Status", link="https://travis-ci.com/metanorma/metanorma-docker"]
image:https://ci.appveyor.com/api/projects/status/ghb0adudv6vrqw6o?svg=true["Appveyor Build Status",link="https://ci.appveyor.com/project/Metanorma/metanorma-docker"]
image:https://img.shields.io/github/issues-pr-raw/metanorma/metanorma-docker.svg["Pull Requests", link="https://github.com/metanorma/metanorma-docker/pulls"]
image:https://img.shields.io/github/commits-since/metanorma/metanorma-docker/latest.svg["Commits since latest",link="https://github.com/metanorma/metanorma-docker/releases"]

== Metanorma document samples

<% for name in %w[mn-samples-iec mn-samples-itu mn-samples-unece mn-samples-gb mn-samples-ogc mn-samples-mpf mn-samples-iso mn-samples-cc mn-samples-ietf] %>
https://github.com/metanorma/<%=name%>[<%=name%>]::
image:https://github.com/metanorma/<%=name%>/workflows/macos/badge.svg["Build Status (macOS)", link="https://github.com/metanorma/<%=name%>/actions?workflow=macos"]
image:https://github.com/metanorma/<%=name%>/workflows/windows/badge.svg["Build Status (Windows)", link="https://github.com/metanorma/<%=name%>/actions?workflow=windows"]
image:https://github.com/metanorma/<%=name%>/workflows/ubuntu/badge.svg["Build Status (Ubuntu)", link="https://github.com/metanorma/<%=name%>/actions?workflow=ubuntu"]
<% end %>

== Metanorma document templates

<% for name in %w[mn-templates-iso mn-templates-iec mn-templates-ogc mn-templates-csd mn-templates-ietf mn-templates-itu] %>
https://github.com/metanorma/<%=name%>[<%=name%>]::
image:https://github.com/metanorma/<%=name%>/workflows/macos/badge.svg["Build Status (macOS)", link="https://github.com/metanorma/<%=name%>/actions?workflow=macos"]
image:https://github.com/metanorma/<%=name%>/workflows/windows/badge.svg["Build Status (Windows)", link="https://github.com/metanorma/<%=name%>/actions?workflow=windows"]
image:https://github.com/metanorma/<%=name%>/workflows/ubuntu/badge.svg["Build Status (Ubuntu)", link="https://github.com/metanorma/<%=name%>/actions?workflow=ubuntu"]
<% end %>

== Utility / Leaf gems

<% for name in %w[cnccs gb-agencies iev isoics mathml2asciimath omml2mathml reverse_adoc unicode2latex] %>
https://github.com/metanorma/<%=name%>[<%=name%>] image:https://img.shields.io/gem/v/<%=name%>.svg["Gem Version", link="https://rubygems.org/gems/<%=name%>"]::
image:https://github.com/metanorma/<%=name%>/workflows/macos/badge.svg["Build Status (macOS)", link="https://github.com/metanorma/<%=name%>/actions?workflow=macos"]
image:https://github.com/metanorma/<%=name%>/workflows/windows/badge.svg["Build Status (Windows)", link="https://github.com/metanorma/<%=name%>/actions?workflow=windows"]
image:https://github.com/metanorma/<%=name%>/workflows/ubuntu/badge.svg["Build Status (Ubuntu)", link="https://github.com/metanorma/<%=name%>/actions?workflow=ubuntu"]
image:https://codeclimate.com/github/metanorma/<%=name%>/badges/gpa.svg["Code Climate", link="https://codeclimate.com/github/metanorma/<%=name%>"]
image:https://img.shields.io/github/issues-pr-raw/metanorma/<%=name%>.svg["Pull Requests", link="https://github.com/metanorma/<%=name%>/pulls"]
image:https://img.shields.io/github/commits-since/metanorma/<%=name%>/latest.svg["Commits since latest",link="https://github.com/metanorma/<%=name%>/releases"]
<% end %>

== Relaton gems

<% for name in %w[relaton-bib relaton-itu relaton-gb relaton-iec relaton-ietf relaton-iso relaton-iso-bib relaton-nist relaton-ogc relaton-iev relaton-cli relaton] %>
https://github.com/relaton/<%=name%>[<%=name%>] image:https://img.shields.io/gem/v/<%=name%>.svg["Gem Version", link="https://rubygems.org/gems/<%=name%>"]::
image:https://github.com/relaton/<%=name%>/workflows/macos/badge.svg["Build Status (macOS)", link="https://github.com/relaton/<%=name%>/actions?workflow=macos"]
image:https://github.com/relaton/<%=name%>/workflows/windows/badge.svg["Build Status (Windows)", link="https://github.com/relaton/<%=name%>/actions?workflow=windows"]
image:https://github.com/relaton/<%=name%>/workflows/ubuntu/badge.svg["Build Status (Ubuntu)", link="https://github.com/relaton/<%=name%>/actions?workflow=ubuntu"]
image:https://codeclimate.com/github/relaton/<%=name%>/badges/gpa.svg["Code Climate", link="https://codeclimate.com/github/relaton/<%=name%>"]
image:https://img.shields.io/github/issues-pr-raw/relaton/<%=name%>.svg["Pull Requests", link="https://github.com/relaton/<%=name%>/pulls"]
image:https://img.shields.io/github/commits-since/relaton/<%=name%>/latest.svg["Commits since latest",link="https://github.com/relaton/<%=name%>/releases"]
<% end %>

== Purpose

Today Metanorma spans over 50 gems. Changes to underlying gems, such as https://github.com/metanorma/metanorma[`metanorma`] can cause many of the downstream gems to need upgrading.

We use the https://github.com/metanorma/lapidist[`lapidist`] gem to synchronize the releases.


== Resources

This repo https://github.com/metanorma/metanorma-release[`metanorma-release`] is used as the main building environment.

It submodules *all* metanorma gems for the release process, and also maintains a gem dependency tree within metanorma (should be easy to automate, or worse to worse manual...).


== Flow

This is really a "`composite-git-flow`" kind of process. Maybe it's called `git gush` or `git cascade`.

The typical scenario is:

. A flavor gem needs enhancing (e.g. ISO)
. `metanorma-iso` forces change on a basic gem, like `isodoc`
. An `isodoc` update means the testing on all downstream gems needs to be updated

This is how the Metanorma release flow will look like.


=== Commands available

[source,sh]
----
$ bundle exec lapidist start
----



=== Updating code and integrated testing

. Go to this `metanorma-release` repository

. Run a script to create feature branches in all gems.

. Do the necessary work in the submodule'd (in this repo) `isodoc` and `metanorma-iso`

. Run a script that performs tests on all the gems at once using the newly created feature branches

.. (alt) if you want Travis to test for you, push the `metanorma-release` repository, and Travis will build for you

. When all the gems pass, run a script to make PRs to every repository. If the feature branch for a gem is empty, the script will ignore it.

. Merge PRs by hand or by script (into master or a release branch)


=== Releasing

. When a release branch is ready (for all gems), run a script to:
.. Bump version of those gems (`VERSION` variable in code)
.. Update the ``Gemfile``s (remove feature branches)
.. Update ``gemspec``s to lock versions

. Issue PRs for those gems to merge their release branches into `master`.

. Merge the release PRs by hand or by script.

Ideally, we want to update the base gems first, then the immediately dependent gems, and so forth to ensure that the builds always pass.

